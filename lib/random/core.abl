# random core functions using a simple linear congruential generator
from time import time
RAND_MOD = 2147483648
RAND_A = 1103515245
RAND_C = 12345

class Random():
    fun init(this, seed):
        this.state = seed % RAND_MOD

    fun seed(this, s):
        this.state = s % RAND_MOD

    fun next_num(this):
        this.state = (RAND_A * this.state + RAND_C) % RAND_MOD
        return this.state

    fun rand(this):
        return this.next_num() / RAND_MOD

    fun randint(this, lo, hi):
        return lo + this.next_num() % (hi - lo + 1)

    fun choice(this, seq):
        return seq.get(this.randint(0, len(seq) - 1))

    fun sample(this, seq, k):
        result = list()
        for i of k:
            result.append(this.choice(seq))
        return result

default_seed = int(time())
default_rng = Random(default_seed)

fun seed(s):
    default_rng.seed(s)

fun rand():
    return default_rng.rand()

fun randint(lo, hi):
    return default_rng.randint(lo, hi)

fun choice(seq):
    return default_rng.choice(seq)

fun sample(seq, k):
    return default_rng.sample(seq, k)
